#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (-5.704431355659494, 3.739889336203319, 3.436203541261027)
                double3 target = (0.07490889306755832, 0.019628613719871346, 0.3055823678629128)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
            }
            string boundCamera = "/World/chassis/car_cam"
        }
        dictionary omni_layer = {
            string authoring_layer = "./model_car.usda"
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            int "rtx:externalFrameCounter" = 653674
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Z"
)

over "Render" (
    hide_in_stage_window = true
)
{
}

def Xform "World" (
    prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
)
{
    def Mesh "wheel_lf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI", "PhysicsMeshCollisionAPI", "PhysxCookedDataAPI:convexHull"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 33, 32, 1, 2, 34, 33, 2, 3, 35, 34, 3, 4, 36, 35, 4, 5, 37, 36, 5, 6, 38, 37, 6, 7, 39, 38, 7, 8, 40, 39, 8, 9, 41, 40, 9, 10, 42, 41, 10, 11, 43, 42, 11, 12, 44, 43, 12, 13, 45, 44, 13, 14, 46, 45, 14, 15, 47, 46, 15, 16, 48, 47, 16, 17, 49, 48, 17, 18, 50, 49, 18, 19, 51, 50, 19, 20, 52, 51, 20, 21, 53, 52, 21, 22, 54, 53, 22, 23, 55, 54, 23, 24, 56, 55, 24, 25, 57, 56, 25, 26, 58, 57, 26, 27, 59, 58, 27, 28, 60, 59, 28, 29, 61, 60, 29, 30, 62, 61, 30, 31, 63, 62, 31, 0, 32, 63, 0, 64, 1, 1, 64, 2, 2, 64, 3, 3, 64, 4, 4, 64, 5, 5, 64, 6, 6, 64, 7, 7, 64, 8, 8, 64, 9, 9, 64, 10, 10, 64, 11, 11, 64, 12, 12, 64, 13, 13, 64, 14, 14, 64, 15, 15, 64, 16, 16, 64, 17, 17, 64, 18, 18, 64, 19, 19, 64, 20, 20, 64, 21, 21, 64, 22, 22, 64, 23, 23, 64, 24, 24, 64, 25, 25, 64, 26, 26, 64, 27, 27, 64, 28, 28, 64, 29, 29, 64, 30, 30, 64, 31, 31, 64, 0, 32, 33, 65, 33, 34, 65, 34, 35, 65, 35, 36, 65, 36, 37, 65, 37, 38, 65, 38, 39, 65, 39, 40, 65, 40, 41, 65, 41, 42, 65, 42, 43, 65, 43, 44, 65, 44, 45, 65, 45, 46, 65, 46, 47, 65, 47, 48, 65, 48, 49, 65, 49, 50, 65, 50, 51, 65, 51, 52, 65, 52, 53, 65, 53, 54, 65, 54, 55, 65, 55, 56, 65, 56, 57, 65, 57, 58, 65, 58, 59, 65, 59, 60, 65, 60, 61, 65, 61, 62, 65, 62, 63, 65, 63, 32, 65]
        rel material:binding = </World/Looks/wheel> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(50, 0, 0), (49.03926, 9.754517, 0), (49.03926, 9.754517, 0), (50, 0, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (46.193974, 19.13417, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (41.57348, 27.778513, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (35.35534, 35.35534, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (27.778513, 41.57348, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (19.13417, 46.193974, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (9.754517, 49.03926, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (3.061617e-15, 50, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-19.13417, 46.193974, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-27.778513, 41.57348, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-35.35534, 35.35534, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-41.57348, 27.778513, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-46.193974, 19.13417, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-49.03926, 9.754517, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-50, 6.123234e-15, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-49.03926, -9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-46.193974, -19.13417, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-41.57348, -27.778513, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-35.35534, -35.35534, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-27.778513, -41.57348, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-19.13417, -46.193974, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.754517, -49.03926, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (-9.184851e-15, -50, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (19.13417, -46.193974, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (27.778513, -41.57348, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (35.35534, -35.35534, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (41.57348, -27.778513, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (46.193974, -19.13417, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (49.03926, -9.754517, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (50, 0, 0), (50, 0, 0), (49.03926, -9.754517, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        uchar[] physxCookedData:convexHull:buffer = [9, 29, 68, 89, 150, 56, 33, 216, 181, 84, 72, 111, 65, 250, 250, 94, 168, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 62, 0, 0, 0, 93, 128, 0, 0, 33, 0, 0, 0, 186, 0, 0, 0, 85, 54, 228, 62, 128, 7, 119, 190, 2, 0, 0, 63, 83, 54, 228, 62, 136, 7, 119, 190, 2, 0, 0, 191, 96, 19, 218, 189, 90, 161, 250, 190, 1, 0, 0, 191, 64, 19, 218, 189, 92, 161, 250, 190, 2, 0, 0, 63, 0, 0, 0, 128, 255, 255, 255, 190, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 190, 2, 0, 0, 63, 64, 19, 218, 61, 92, 161, 250, 62, 2, 0, 0, 63, 96, 19, 218, 61, 90, 161, 250, 62, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 62, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 62, 2, 0, 0, 63, 92, 161, 250, 190, 64, 19, 218, 61, 2, 0, 0, 63, 90, 161, 250, 190, 96, 19, 218, 61, 1, 0, 0, 191, 255, 255, 255, 190, 0, 0, 0, 128, 1, 0, 0, 191, 255, 255, 255, 190, 0, 0, 0, 128, 2, 0, 0, 63, 92, 161, 250, 62, 64, 19, 218, 189, 2, 0, 0, 63, 90, 161, 250, 62, 96, 19, 218, 189, 1, 0, 0, 191, 255, 255, 255, 62, 0, 0, 0, 128, 1, 0, 0, 191, 255, 255, 255, 62, 0, 0, 0, 128, 2, 0, 0, 63, 248, 4, 181, 190, 248, 4, 181, 62, 1, 0, 0, 191, 224, 57, 142, 190, 52, 219, 212, 62, 2, 0, 0, 191, 216, 57, 142, 190, 52, 219, 212, 62, 2, 0, 0, 63, 244, 4, 181, 190, 244, 4, 181, 62, 2, 0, 0, 63, 248, 4, 181, 62, 248, 4, 181, 190, 1, 0, 0, 191, 224, 57, 142, 62, 52, 219, 212, 190, 2, 0, 0, 191, 216, 57, 142, 62, 52, 219, 212, 190, 2, 0, 0, 63, 244, 4, 181, 62, 244, 4, 181, 190, 2, 0, 0, 63, 94, 131, 236, 190, 16, 239, 67, 190, 0, 0, 0, 191, 190, 20, 251, 190, 224, 197, 199, 189, 2, 0, 0, 191, 189, 20, 251, 190, 224, 197, 199, 189, 1, 0, 0, 63, 94, 131, 236, 190, 16, 239, 67, 190, 1, 0, 0, 63, 94, 131, 236, 62, 16, 239, 67, 62, 0, 0, 0, 191, 190, 20, 251, 62, 224, 197, 199, 61, 2, 0, 0, 191, 189, 20, 251, 62, 224, 197, 199, 61, 1, 0, 0, 63, 94, 131, 236, 62, 16, 239, 67, 62, 1, 0, 0, 63, 16, 239, 67, 190, 94, 131, 236, 62, 0, 0, 0, 191, 224, 197, 199, 189, 185, 20, 251, 62, 0, 0, 0, 191, 224, 197, 199, 189, 189, 20, 251, 62, 1, 0, 0, 63, 16, 239, 67, 190, 94, 131, 236, 62, 1, 0, 0, 63, 16, 239, 67, 62, 94, 131, 236, 190, 0, 0, 0, 191, 224, 197, 199, 61, 185, 20, 251, 190, 0, 0, 0, 191, 224, 197, 199, 61, 189, 20, 251, 190, 1, 0, 0, 63, 16, 239, 67, 62, 94, 131, 236, 190, 1, 0, 0, 63, 248, 4, 181, 190, 248, 4, 181, 190, 1, 0, 0, 191, 52, 219, 212, 190, 224, 57, 142, 190, 2, 0, 0, 191, 52, 219, 212, 190, 216, 57, 142, 190, 2, 0, 0, 63, 244, 4, 181, 190, 244, 4, 181, 190, 2, 0, 0, 63, 248, 4, 181, 62, 248, 4, 181, 62, 1, 0, 0, 191, 52, 219, 212, 62, 224, 57, 142, 62, 2, 0, 0, 191, 52, 219, 212, 62, 216, 57, 142, 62, 2, 0, 0, 63, 244, 4, 181, 62, 244, 4, 181, 62, 2, 0, 0, 63, 0, 239, 67, 190, 102, 131, 236, 190, 3, 0, 0, 191, 0, 239, 67, 190, 100, 131, 236, 190, 2, 0, 0, 63, 224, 57, 142, 190, 52, 219, 212, 190, 2, 0, 0, 191, 216, 57, 142, 190, 52, 219, 212, 190, 2, 0, 0, 63, 0, 239, 67, 62, 96, 131, 236, 62, 2, 0, 0, 63, 0, 239, 67, 62, 98, 131, 236, 62, 3, 0, 0, 191, 224, 57, 142, 62, 52, 219, 212, 62, 2, 0, 0, 191, 216, 57, 142, 62, 52, 219, 212, 62, 2, 0, 0, 63, 96, 131, 236, 190, 0, 239, 67, 62, 2, 0, 0, 63, 96, 131, 236, 190, 0, 239, 67, 62, 1, 0, 0, 191, 52, 219, 212, 190, 224, 57, 142, 62, 2, 0, 0, 191, 52, 219, 212, 190, 216, 57, 142, 62, 2, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 127, 191, 1, 0, 0, 191, 0, 0, 31, 0, 111, 120, 115, 63, 122, 55, 158, 190, 0, 0, 0, 0, 248, 53, 255, 190, 31, 0, 4, 10, 122, 55, 158, 190, 111, 120, 115, 191, 0, 0, 0, 0, 249, 53, 255, 190, 35, 0, 4, 6, 122, 55, 158, 62, 111, 120, 115, 63, 0, 0, 0, 0, 248, 53, 255, 190, 39, 0, 4, 50, 111, 120, 115, 191, 122, 55, 158, 62, 0, 0, 0, 0, 248, 53, 255, 190, 43, 0, 4, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 63, 2, 0, 0, 191, 47, 0, 31, 50, 156, 197, 97, 191, 222, 90, 241, 190, 0, 0, 0, 0, 109, 196, 254, 190, 78, 0, 4, 47, 156, 197, 97, 63, 222, 90, 241, 62, 0, 0, 0, 0, 109, 196, 254, 190, 82, 0, 4, 43, 222, 90, 241, 190, 156, 197, 97, 63, 0, 0, 0, 0, 109, 196, 254, 190, 86, 0, 4, 23, 222, 90, 241, 62, 156, 197, 97, 191, 0, 0, 0, 0, 109, 196, 254, 190, 90, 0, 4, 19, 113, 189, 200, 61, 107, 196, 126, 191, 0, 0, 0, 0, 106, 196, 254, 190, 94, 0, 4, 36, 113, 189, 200, 189, 107, 196, 126, 63, 0, 0, 0, 0, 106, 196, 254, 190, 98, 0, 4, 40, 107, 196, 126, 191, 113, 189, 200, 189, 0, 0, 0, 0, 106, 196, 254, 190, 102, 0, 4, 31, 107, 196, 126, 63, 113, 189, 200, 61, 0, 0, 0, 0, 106, 196, 254, 190, 106, 0, 4, 27, 154, 103, 34, 191, 2, 228, 69, 191, 0, 0, 0, 0, 108, 196, 254, 190, 110, 0, 4, 46, 154, 103, 34, 63, 2, 228, 69, 63, 0, 0, 0, 0, 108, 196, 254, 190, 114, 0, 4, 42, 2, 228, 69, 191, 154, 103, 34, 63, 0, 0, 0, 0, 108, 196, 254, 190, 118, 0, 4, 22, 2, 228, 69, 63, 154, 103, 34, 191, 0, 0, 0, 0, 108, 196, 254, 190, 122, 0, 4, 18, 113, 189, 200, 189, 107, 196, 126, 191, 0, 0, 0, 0, 106, 196, 254, 190, 126, 0, 4, 8, 113, 189, 200, 61, 107, 196, 126, 63, 0, 0, 0, 0, 106, 196, 254, 190, 130, 0, 4, 4, 107, 196, 126, 191, 113, 189, 200, 61, 0, 0, 0, 0, 106, 196, 254, 190, 134, 0, 4, 16, 107, 196, 126, 63, 113, 189, 200, 189, 0, 0, 0, 0, 106, 196, 254, 190, 138, 0, 4, 12, 154, 103, 34, 191, 2, 228, 69, 63, 0, 0, 0, 0, 108, 196, 254, 190, 142, 0, 4, 22, 154, 103, 34, 63, 2, 228, 69, 191, 0, 0, 0, 0, 108, 196, 254, 190, 146, 0, 4, 18, 9, 250, 116, 191, 51, 160, 148, 190, 0, 0, 0, 0, 106, 196, 254, 190, 150, 0, 4, 31, 9, 250, 116, 63, 51, 160, 148, 62, 0, 0, 0, 0, 106, 196, 254, 190, 154, 0, 4, 27, 51, 160, 148, 190, 9, 250, 116, 63, 0, 0, 0, 0, 106, 196, 254, 190, 158, 0, 4, 40, 51, 160, 148, 62, 9, 250, 116, 191, 0, 0, 0, 0, 106, 196, 254, 190, 162, 0, 4, 36, 2, 228, 69, 191, 154, 103, 34, 191, 0, 0, 0, 0, 108, 196, 254, 190, 166, 0, 4, 46, 2, 228, 69, 63, 154, 103, 34, 63, 0, 0, 0, 0, 108, 196, 254, 190, 170, 0, 4, 42, 222, 90, 241, 190, 156, 197, 97, 191, 0, 0, 0, 0, 109, 196, 254, 190, 174, 0, 4, 56, 222, 90, 241, 62, 156, 197, 97, 63, 0, 0, 0, 0, 109, 196, 254, 190, 178, 0, 4, 52, 156, 197, 97, 191, 222, 90, 241, 62, 0, 0, 0, 0, 109, 196, 254, 190, 182, 0, 4, 0, 11, 59, 60, 18, 19, 34, 35, 8, 7, 55, 56, 46, 47, 30, 31, 16, 15, 1, 22, 23, 38, 39, 4, 2, 50, 52, 42, 43, 26, 27, 12, 14, 0, 1, 15, 50, 2, 3, 51, 6, 54, 55, 7, 10, 58, 59, 11, 51, 3, 5, 40, 41, 24, 25, 0, 14, 17, 32, 33, 48, 49, 57, 54, 6, 9, 36, 37, 20, 21, 61, 58, 10, 13, 28, 29, 44, 45, 53, 26, 43, 44, 29, 30, 47, 48, 33, 20, 37, 34, 19, 24, 41, 38, 23, 4, 39, 40, 5, 8, 35, 36, 9, 12, 27, 28, 13, 16, 31, 32, 17, 53, 45, 42, 52, 57, 49, 46, 56, 61, 21, 18, 60, 1, 0, 25, 22, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 50, 51, 53, 52, 55, 54, 57, 56, 59, 58, 61, 60, 1, 17, 1, 5, 5, 17, 0, 1, 0, 17, 2, 18, 0, 18, 0, 2, 5, 18, 2, 5, 10, 18, 0, 10, 5, 10, 3, 19, 5, 19, 3, 5, 0, 19, 0, 3, 11, 19, 0, 11, 5, 11, 4, 20, 5, 20, 4, 5, 0, 20, 0, 4, 12, 20, 0, 12, 5, 12, 1, 21, 5, 21, 0, 21, 13, 21, 0, 13, 5, 13, 0, 22, 16, 22, 0, 16, 8, 22, 0, 8, 5, 22, 5, 8, 5, 16, 0, 23, 17, 23, 9, 23, 0, 9, 5, 23, 5, 9, 0, 24, 6, 24, 0, 6, 12, 24, 5, 24, 5, 6, 0, 25, 7, 25, 0, 7, 13, 25, 5, 25, 5, 7, 0, 26, 8, 26, 11, 26, 5, 26, 0, 27, 9, 27, 10, 27, 5, 27, 0, 28, 14, 28, 0, 14, 6, 28, 5, 28, 5, 14, 0, 29, 15, 29, 0, 15, 7, 29, 5, 29, 5, 15, 2, 30, 0, 30, 5, 30, 14, 30, 3, 31, 5, 31, 0, 31, 15, 31, 4, 32, 5, 32, 0, 32, 16, 32, 1, 5, 17, 0, 1, 17, 0, 2, 18, 2, 5, 18, 0, 10, 18, 5, 10, 18, 3, 5, 19, 0, 3, 19, 0, 11, 19, 5, 11, 19, 4, 5, 20, 0, 4, 20, 0, 12, 20, 5, 12, 20, 1, 5, 21, 0, 1, 21, 0, 13, 21, 5, 13, 21, 0, 16, 22, 0, 8, 22, 5, 8, 22, 5, 16, 22, 0, 17, 23, 0, 9, 23, 5, 9, 23, 5, 17, 23, 0, 6, 24, 0, 12, 24, 5, 12, 24, 5, 6, 24, 0, 7, 25, 0, 13, 25, 5, 13, 25, 5, 7, 25, 0, 8, 26, 0, 11, 26, 5, 11, 26, 5, 8, 26, 0, 9, 27, 0, 10, 27, 5, 10, 27, 5, 9, 27, 0, 14, 28, 0, 6, 28, 5, 6, 28, 5, 14, 28, 0, 15, 29, 0, 7, 29, 5, 7, 29, 5, 15, 29, 0, 2, 30, 2, 5, 30, 0, 14, 30, 5, 14, 30, 3, 5, 31, 0, 3, 31, 0, 15, 31, 5, 15, 31, 4, 5, 32, 0, 4, 32, 0, 16, 32, 5, 16, 32, 0, 0, 1, 0, 14, 0, 0, 0, 25, 0, 0, 0, 15, 0, 1, 0, 1, 0, 22, 0, 2, 0, 3, 0, 4, 0, 2, 0, 2, 0, 50, 0, 3, 0, 5, 0, 3, 0, 51, 0, 5, 0, 4, 0, 39, 0, 4, 0, 5, 0, 40, 0, 7, 0, 6, 0, 6, 0, 9, 0, 6, 0, 54, 0, 8, 0, 7, 0, 7, 0, 55, 0, 9, 0, 8, 0, 35, 0, 8, 0, 9, 0, 36, 0, 11, 0, 10, 0, 10, 0, 13, 0, 10, 0, 58, 0, 12, 0, 11, 0, 11, 0, 59, 0, 13, 0, 12, 0, 27, 0, 12, 0, 13, 0, 28, 0, 15, 0, 14, 0, 14, 0, 17, 0, 16, 0, 15, 0, 17, 0, 16, 0, 31, 0, 16, 0, 17, 0, 32, 0, 18, 0, 19, 0, 21, 0, 18, 0, 60, 0, 18, 0, 19, 0, 20, 0, 19, 0, 34, 0, 20, 0, 21, 0, 37, 0, 20, 0, 21, 0, 61, 0, 22, 0, 23, 0, 25, 0, 22, 0, 23, 0, 24, 0, 23, 0, 38, 0, 24, 0, 25, 0, 41, 0, 24, 0, 26, 0, 27, 0, 29, 0, 26, 0, 43, 0, 26, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 44, 0, 30, 0, 31, 0, 33, 0, 30, 0, 47, 0, 30, 0, 31, 0, 32, 0, 32, 0, 33, 0, 33, 0, 48, 0, 34, 0, 35, 0, 37, 0, 34, 0, 35, 0, 36, 0, 36, 0, 37, 0, 38, 0, 39, 0, 41, 0, 38, 0, 39, 0, 40, 0, 40, 0, 41, 0, 42, 0, 43, 0, 45, 0, 42, 0, 52, 0, 42, 0, 43, 0, 44, 0, 44, 0, 45, 0, 45, 0, 53, 0, 46, 0, 47, 0, 49, 0, 46, 0, 56, 0, 46, 0, 47, 0, 48, 0, 48, 0, 49, 0, 49, 0, 57, 0, 51, 0, 50, 0, 50, 0, 52, 0, 53, 0, 51, 0, 52, 0, 53, 0, 54, 0, 55, 0, 57, 0, 54, 0, 55, 0, 56, 0, 56, 0, 57, 0, 58, 0, 59, 0, 61, 0, 58, 0, 59, 0, 60, 0, 60, 0, 61, 0, 0, 0, 0, 0, 255, 255, 255, 190, 255, 255, 255, 190, 2, 0, 0, 191, 255, 255, 255, 62, 255, 255, 255, 62, 2, 0, 0, 63, 230, 249, 71, 63, 38, 180, 232, 61, 100, 184, 69, 56, 181, 41, 224, 47, 100, 184, 69, 56, 237, 212, 232, 61, 110, 47, 80, 48, 181, 41, 224, 47, 110, 47, 80, 48, 133, 230, 198, 61, 224, 213, 133, 57, 192, 173, 15, 185, 21, 228, 139, 50, 0, 0, 128, 63, 73, 67, 69, 1, 83, 85, 80, 77, 0, 0, 0, 0, 73, 67, 69, 1, 71, 65, 85, 83, 0, 0, 0, 0, 16, 0, 0, 0, 0, 6, 0, 0, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 44, 44, 29, 29, 28, 13, 13, 10, 58, 58, 61, 61, 21, 21, 45, 45, 45, 44, 44, 29, 28, 13, 13, 10, 58, 61, 61, 21, 21, 21, 53, 45, 45, 44, 44, 29, 28, 13, 13, 10, 58, 61, 61, 21, 21, 20, 53, 53, 53, 45, 44, 44, 29, 28, 10, 58, 61, 61, 21, 20, 20, 20, 51, 53, 53, 53, 45, 44, 29, 28, 10, 58, 61, 21, 20, 20, 20, 37, 51, 51, 51, 53, 53, 45, 44, 28, 10, 61, 21, 20, 20, 37, 37, 37, 3, 3, 3, 51, 51, 53, 45, 29, 58, 21, 20, 37, 37, 36, 36, 36, 5, 5, 5, 3, 3, 3, 51, 45, 21, 37, 36, 36, 36, 9, 9, 9, 5, 5, 5, 40, 40, 40, 41, 25, 49, 54, 6, 6, 6, 9, 9, 9, 40, 40, 40, 41, 41, 24, 25, 0, 33, 49, 57, 54, 54, 6, 6, 6, 41, 41, 41, 24, 24, 25, 0, 14, 32, 48, 49, 57, 57, 54, 54, 54, 41, 24, 24, 24, 25, 0, 0, 14, 32, 33, 48, 49, 57, 57, 57, 54, 24, 24, 24, 25, 0, 0, 0, 14, 32, 33, 48, 48, 49, 57, 57, 57, 24, 25, 25, 0, 0, 0, 14, 17, 17, 32, 33, 48, 48, 49, 49, 57, 25, 25, 25, 0, 0, 0, 14, 17, 17, 32, 33, 48, 48, 49, 49, 49, 25, 25, 0, 0, 0, 0, 14, 17, 17, 32, 33, 33, 48, 48, 49, 49, 42, 42, 43, 43, 26, 26, 27, 12, 12, 11, 59, 59, 60, 60, 18, 18, 42, 42, 42, 43, 43, 26, 27, 12, 12, 11, 59, 60, 60, 18, 18, 18, 52, 42, 42, 43, 43, 26, 27, 12, 12, 11, 59, 60, 60, 18, 18, 19, 52, 52, 52, 42, 43, 43, 26, 27, 11, 59, 60, 60, 18, 19, 19, 19, 50, 52, 52, 52, 42, 43, 26, 27, 11, 59, 60, 18, 19, 19, 19, 34, 50, 50, 50, 52, 52, 42, 43, 27, 11, 60, 18, 19, 19, 34, 34, 34, 2, 2, 2, 50, 50, 52, 42, 26, 59, 18, 19, 34, 34, 35, 35, 35, 4, 4, 4, 2, 2, 2, 50, 42, 18, 34, 35, 35, 35, 8, 8, 8, 4, 4, 4, 39, 39, 39, 38, 22, 46, 55, 7, 7, 7, 8, 8, 8, 39, 39, 39, 38, 38, 23, 22, 1, 30, 46, 56, 55, 55, 7, 7, 7, 38, 38, 38, 23, 23, 22, 1, 15, 31, 47, 46, 56, 56, 55, 55, 55, 38, 23, 23, 23, 22, 1, 1, 15, 31, 30, 47, 46, 56, 56, 56, 55, 23, 23, 23, 22, 1, 1, 1, 15, 31, 30, 47, 47, 46, 56, 56, 56, 23, 22, 22, 1, 1, 1, 15, 16, 16, 31, 30, 47, 47, 46, 46, 56, 22, 22, 22, 1, 1, 1, 15, 16, 16, 31, 30, 47, 47, 46, 46, 46, 22, 22, 1, 1, 1, 1, 15, 16, 16, 31, 30, 30, 47, 47, 46, 46, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 47, 47, 30, 30, 31, 16, 16, 15, 1, 1, 1, 1, 22, 22, 46, 46, 46, 47, 47, 30, 31, 16, 16, 15, 1, 1, 1, 22, 22, 22, 56, 46, 46, 47, 47, 30, 31, 16, 16, 15, 1, 1, 1, 22, 22, 23, 56, 56, 56, 46, 47, 47, 30, 31, 15, 1, 1, 1, 22, 23, 23, 23, 55, 56, 56, 56, 46, 47, 30, 31, 15, 1, 1, 22, 23, 23, 23, 38, 55, 55, 55, 56, 56, 46, 47, 31, 15, 1, 22, 23, 23, 38, 38, 38, 7, 7, 7, 55, 55, 56, 46, 30, 1, 22, 23, 38, 38, 39, 39, 39, 8, 8, 8, 7, 7, 7, 55, 46, 22, 38, 39, 39, 39, 4, 4, 4, 8, 8, 8, 35, 35, 35, 34, 18, 42, 50, 2, 2, 2, 4, 4, 4, 35, 35, 35, 34, 34, 19, 18, 59, 26, 42, 52, 50, 50, 2, 2, 2, 34, 34, 34, 19, 19, 18, 60, 11, 27, 43, 42, 52, 52, 50, 50, 50, 34, 19, 19, 19, 18, 60, 59, 11, 27, 26, 43, 42, 52, 52, 52, 50, 19, 19, 19, 18, 60, 60, 59, 11, 27, 26, 43, 43, 42, 52, 52, 52, 19, 18, 18, 60, 60, 59, 11, 12, 12, 27, 26, 43, 43, 42, 42, 52, 18, 18, 18, 60, 60, 59, 11, 12, 12, 27, 26, 43, 43, 42, 42, 42, 18, 18, 60, 60, 59, 59, 11, 12, 12, 27, 26, 26, 43, 43, 42, 42, 49, 49, 48, 48, 33, 33, 32, 17, 17, 14, 0, 0, 0, 0, 25, 25, 49, 49, 49, 48, 48, 33, 32, 17, 17, 14, 0, 0, 0, 25, 25, 25, 57, 49, 49, 48, 48, 33, 32, 17, 17, 14, 0, 0, 0, 25, 25, 24, 57, 57, 57, 49, 48, 48, 33, 32, 14, 0, 0, 0, 25, 24, 24, 24, 54, 57, 57, 57, 49, 48, 33, 32, 14, 0, 0, 25, 24, 24, 24, 41, 54, 54, 54, 57, 57, 49, 48, 32, 14, 0, 25, 24, 24, 41, 41, 41, 6, 6, 6, 54, 54, 57, 49, 33, 0, 25, 24, 41, 41, 40, 40, 40, 9, 9, 9, 6, 6, 6, 54, 49, 25, 41, 40, 40, 40, 5, 5, 5, 9, 9, 9, 36, 36, 36, 37, 21, 45, 51, 3, 3, 3, 5, 5, 5, 36, 36, 36, 37, 37, 20, 21, 58, 29, 45, 53, 51, 51, 3, 3, 3, 37, 37, 37, 20, 20, 21, 61, 10, 28, 44, 45, 53, 53, 51, 51, 51, 37, 20, 20, 20, 21, 61, 58, 10, 28, 29, 44, 45, 53, 53, 53, 51, 20, 20, 20, 21, 61, 61, 58, 10, 28, 29, 44, 44, 45, 53, 53, 53, 20, 21, 21, 61, 61, 58, 10, 13, 13, 28, 29, 44, 44, 45, 45, 53, 21, 21, 21, 61, 61, 58, 10, 13, 13, 28, 29, 44, 44, 45, 45, 45, 21, 21, 61, 61, 58, 58, 10, 13, 13, 28, 29, 29, 44, 44, 45, 45, 73, 67, 69, 1, 86, 65, 76, 69, 2, 0, 0, 0, 62, 0, 0, 0, 186, 0, 0, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 25, 14, 22, 0, 15, 50, 3, 4, 51, 5, 2, 2, 5, 39, 40, 4, 3, 54, 9, 7, 55, 6, 8, 7, 9, 35, 36, 8, 6, 58, 13, 11, 59, 10, 12, 11, 13, 27, 28, 12, 10, 0, 17, 15, 1, 14, 16, 15, 17, 31, 32, 16, 14, 19, 21, 60, 34, 20, 18, 21, 19, 37, 61, 18, 20, 23, 25, 1, 38, 24, 22, 25, 23, 41, 0, 22, 24, 27, 29, 43, 12, 28, 26, 29, 27, 13, 44, 26, 28, 31, 33, 47, 16, 32, 30, 33, 31, 17, 48, 30, 32, 35, 37, 19, 8, 36, 34, 37, 35, 9, 20, 34, 36, 39, 41, 23, 4, 40, 38, 41, 39, 5, 24, 38, 40, 43, 45, 52, 26, 44, 42, 45, 43, 29, 53, 42, 44, 47, 49, 56, 30, 48, 46, 49, 47, 33, 57, 46, 48, 52, 51, 2, 50, 53, 3, 42, 53, 50, 51, 52, 45, 55, 57, 6, 56, 54, 7, 46, 57, 55, 54, 56, 49, 59, 61, 10, 60, 58, 11, 18, 61, 59, 58, 60, 21, 0, 0, 128, 191, 42, 159, 254, 62, 122, 234, 180, 62, 122, 234, 180, 62, 2, 0, 0, 63]
        point3f[] points = [(0.5, 0, -0.5), (0.4903926, 0.09754517, -0.5), (0.46193972, 0.1913417, -0.5), (0.4157348, 0.27778512, -0.5), (0.35355338, 0.35355338, -0.5), (0.27778512, 0.4157348, -0.5), (0.1913417, 0.46193972, -0.5), (0.09754517, 0.4903926, -0.5), (3.061617e-17, 0.5, -0.5), (-0.09754517, 0.4903926, -0.5), (-0.1913417, 0.46193972, -0.5), (-0.27778512, 0.4157348, -0.5), (-0.35355338, 0.35355338, -0.5), (-0.4157348, 0.27778512, -0.5), (-0.46193972, 0.1913417, -0.5), (-0.4903926, 0.09754517, -0.5), (-0.5, 6.123234e-17, -0.5), (-0.4903926, -0.09754517, -0.5), (-0.46193972, -0.1913417, -0.5), (-0.4157348, -0.27778512, -0.5), (-0.35355338, -0.35355338, -0.5), (-0.27778512, -0.4157348, -0.5), (-0.1913417, -0.46193972, -0.5), (-0.09754517, -0.4903926, -0.5), (-9.184851e-17, -0.5, -0.5), (0.09754517, -0.4903926, -0.5), (0.1913417, -0.46193972, -0.5), (0.27778512, -0.4157348, -0.5), (0.35355338, -0.35355338, -0.5), (0.4157348, -0.27778512, -0.5), (0.46193972, -0.1913417, -0.5), (0.4903926, -0.09754517, -0.5), (0.5, 0, 0.5), (0.4903926, 0.09754517, 0.5), (0.46193972, 0.1913417, 0.5), (0.4157348, 0.27778512, 0.5), (0.35355338, 0.35355338, 0.5), (0.27778512, 0.4157348, 0.5), (0.1913417, 0.46193972, 0.5), (0.09754517, 0.4903926, 0.5), (3.061617e-17, 0.5, 0.5), (-0.09754517, 0.4903926, 0.5), (-0.1913417, 0.46193972, 0.5), (-0.27778512, 0.4157348, 0.5), (-0.35355338, 0.35355338, 0.5), (-0.4157348, 0.27778512, 0.5), (-0.46193972, 0.1913417, 0.5), (-0.4903926, 0.09754517, 0.5), (-0.5, 6.123234e-17, 0.5), (-0.4903926, -0.09754517, 0.5), (-0.46193972, -0.1913417, 0.5), (-0.4157348, -0.27778512, 0.5), (-0.35355338, -0.35355338, 0.5), (-0.27778512, -0.4157348, 0.5), (-0.1913417, -0.46193972, 0.5), (-0.09754517, -0.4903926, 0.5), (-9.184851e-17, -0.5, 0.5), (0.09754517, -0.4903926, 0.5), (0.1913417, -0.46193972, 0.5), (0.27778512, -0.4157348, 0.5), (0.35355338, -0.35355338, 0.5), (0.4157348, -0.27778512, 0.5), (0.46193972, -0.1913417, 0.5), (0.4903926, -0.09754517, 0.5), (0, 0, -0.5), (0, 0, 0.5)]
        float2[] primvars:st = [(1, 0), (0.96875, 0), (0.96875, 1), (1, 1), (0.96875, 0), (0.9375, 0), (0.9375, 1), (0.96875, 1), (0.9375, 0), (0.90625, 0), (0.90625, 1), (0.9375, 1), (0.90625, 0), (0.875, 0), (0.875, 1), (0.90625, 1), (0.875, 0), (0.84375, 0), (0.84375, 1), (0.875, 1), (0.84375, 0), (0.8125, 0), (0.8125, 1), (0.84375, 1), (0.8125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 1), (0.78125, 0), (0.75, 0), (0.75, 1), (0.78125, 1), (0.75, 0), (0.71875, 0), (0.71875, 1), (0.75, 1), (0.71875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 1), (0.6875, 0), (0.65625, 0), (0.65625, 1), (0.6875, 1), (0.65625, 0), (0.625, 0), (0.625, 1), (0.65625, 1), (0.625, 0), (0.59375, 0), (0.59375, 1), (0.625, 1), (0.59375, 0), (0.5625, 0), (0.5625, 1), (0.59375, 1), (0.5625, 0), (0.53125, 0), (0.53125, 1), (0.5625, 1), (0.53125, 0), (0.5, 0), (0.5, 1), (0.53125, 1), (0.5, 0), (0.46875, 0), (0.46875, 1), (0.5, 1), (0.46875, 0), (0.4375, 0), (0.4375, 1), (0.46875, 1), (0.4375, 0), (0.40625, 0), (0.40625, 1), (0.4375, 1), (0.40625, 0), (0.375, 0), (0.375, 1), (0.40625, 1), (0.375, 0), (0.34375, 0), (0.34375, 1), (0.375, 1), (0.34375, 0), (0.3125, 0), (0.3125, 1), (0.34375, 1), (0.3125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 1), (0.28125, 0), (0.25, 0), (0.25, 1), (0.28125, 1), (0.25, 0), (0.21875, 0), (0.21875, 1), (0.25, 1), (0.21875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 1), (0.1875, 0), (0.15625, 0), (0.15625, 1), (0.1875, 1), (0.15625, 0), (0.125, 0), (0.125, 1), (0.15625, 1), (0.125, 0), (0.09375, 0), (0.09375, 1), (0.125, 1), (0.09375, 0), (0.0625, 0), (0.0625, 1), (0.09375, 1), (0.0625, 0), (0.03125, 0), (0.03125, 1), (0.0625, 1), (0.03125, 0), (0, 0), (0, 1), (0.03125, 1), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (1, 1, 0.25)
        double3 xformOp:translate = (-0.75, 0.75, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "wheel_joint_lf" (
            delete apiSchemas = ["PhysicsDriveAPI:angular"]
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 10000
            float drive:angular:physics:targetVelocity = 0
            uniform token physics:axis = "X"
            rel physics:body0 = </World/chassis>
            rel physics:body1 = </World/wheel_lf>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.75, 0.375, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (0.70710677, 0, -0.70710677, 0)
        }
    }

    def Mesh "wheel_lb" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI", "PhysicsMeshCollisionAPI", "PhysxCookedDataAPI:convexHull"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 33, 32, 1, 2, 34, 33, 2, 3, 35, 34, 3, 4, 36, 35, 4, 5, 37, 36, 5, 6, 38, 37, 6, 7, 39, 38, 7, 8, 40, 39, 8, 9, 41, 40, 9, 10, 42, 41, 10, 11, 43, 42, 11, 12, 44, 43, 12, 13, 45, 44, 13, 14, 46, 45, 14, 15, 47, 46, 15, 16, 48, 47, 16, 17, 49, 48, 17, 18, 50, 49, 18, 19, 51, 50, 19, 20, 52, 51, 20, 21, 53, 52, 21, 22, 54, 53, 22, 23, 55, 54, 23, 24, 56, 55, 24, 25, 57, 56, 25, 26, 58, 57, 26, 27, 59, 58, 27, 28, 60, 59, 28, 29, 61, 60, 29, 30, 62, 61, 30, 31, 63, 62, 31, 0, 32, 63, 0, 64, 1, 1, 64, 2, 2, 64, 3, 3, 64, 4, 4, 64, 5, 5, 64, 6, 6, 64, 7, 7, 64, 8, 8, 64, 9, 9, 64, 10, 10, 64, 11, 11, 64, 12, 12, 64, 13, 13, 64, 14, 14, 64, 15, 15, 64, 16, 16, 64, 17, 17, 64, 18, 18, 64, 19, 19, 64, 20, 20, 64, 21, 21, 64, 22, 22, 64, 23, 23, 64, 24, 24, 64, 25, 25, 64, 26, 26, 64, 27, 27, 64, 28, 28, 64, 29, 29, 64, 30, 30, 64, 31, 31, 64, 0, 32, 33, 65, 33, 34, 65, 34, 35, 65, 35, 36, 65, 36, 37, 65, 37, 38, 65, 38, 39, 65, 39, 40, 65, 40, 41, 65, 41, 42, 65, 42, 43, 65, 43, 44, 65, 44, 45, 65, 45, 46, 65, 46, 47, 65, 47, 48, 65, 48, 49, 65, 49, 50, 65, 50, 51, 65, 51, 52, 65, 52, 53, 65, 53, 54, 65, 54, 55, 65, 55, 56, 65, 56, 57, 65, 57, 58, 65, 58, 59, 65, 59, 60, 65, 60, 61, 65, 61, 62, 65, 62, 63, 65, 63, 32, 65]
        rel material:binding = </World/Looks/wheel> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(50, 0, 0), (49.03926, 9.754517, 0), (49.03926, 9.754517, 0), (50, 0, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (46.193974, 19.13417, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (41.57348, 27.778513, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (35.35534, 35.35534, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (27.778513, 41.57348, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (19.13417, 46.193974, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (9.754517, 49.03926, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (3.061617e-15, 50, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-19.13417, 46.193974, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-27.778513, 41.57348, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-35.35534, 35.35534, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-41.57348, 27.778513, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-46.193974, 19.13417, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-49.03926, 9.754517, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-50, 6.123234e-15, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-49.03926, -9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-46.193974, -19.13417, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-41.57348, -27.778513, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-35.35534, -35.35534, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-27.778513, -41.57348, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-19.13417, -46.193974, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.754517, -49.03926, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (-9.184851e-15, -50, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (19.13417, -46.193974, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (27.778513, -41.57348, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (35.35534, -35.35534, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (41.57348, -27.778513, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (46.193974, -19.13417, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (49.03926, -9.754517, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (50, 0, 0), (50, 0, 0), (49.03926, -9.754517, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        uchar[] physxCookedData:convexHull:buffer = [9, 29, 68, 89, 150, 56, 33, 216, 181, 84, 72, 111, 65, 250, 250, 94, 168, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 62, 0, 0, 0, 93, 128, 0, 0, 33, 0, 0, 0, 186, 0, 0, 0, 85, 54, 228, 62, 128, 7, 119, 190, 2, 0, 0, 63, 83, 54, 228, 62, 136, 7, 119, 190, 2, 0, 0, 191, 96, 19, 218, 189, 90, 161, 250, 190, 1, 0, 0, 191, 64, 19, 218, 189, 92, 161, 250, 190, 2, 0, 0, 63, 0, 0, 0, 128, 255, 255, 255, 190, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 190, 2, 0, 0, 63, 64, 19, 218, 61, 92, 161, 250, 62, 2, 0, 0, 63, 96, 19, 218, 61, 90, 161, 250, 62, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 62, 1, 0, 0, 191, 0, 0, 0, 128, 255, 255, 255, 62, 2, 0, 0, 63, 92, 161, 250, 190, 64, 19, 218, 61, 2, 0, 0, 63, 90, 161, 250, 190, 96, 19, 218, 61, 1, 0, 0, 191, 255, 255, 255, 190, 0, 0, 0, 128, 1, 0, 0, 191, 255, 255, 255, 190, 0, 0, 0, 128, 2, 0, 0, 63, 92, 161, 250, 62, 64, 19, 218, 189, 2, 0, 0, 63, 90, 161, 250, 62, 96, 19, 218, 189, 1, 0, 0, 191, 255, 255, 255, 62, 0, 0, 0, 128, 1, 0, 0, 191, 255, 255, 255, 62, 0, 0, 0, 128, 2, 0, 0, 63, 248, 4, 181, 190, 248, 4, 181, 62, 1, 0, 0, 191, 224, 57, 142, 190, 52, 219, 212, 62, 2, 0, 0, 191, 216, 57, 142, 190, 52, 219, 212, 62, 2, 0, 0, 63, 244, 4, 181, 190, 244, 4, 181, 62, 2, 0, 0, 63, 248, 4, 181, 62, 248, 4, 181, 190, 1, 0, 0, 191, 224, 57, 142, 62, 52, 219, 212, 190, 2, 0, 0, 191, 216, 57, 142, 62, 52, 219, 212, 190, 2, 0, 0, 63, 244, 4, 181, 62, 244, 4, 181, 190, 2, 0, 0, 63, 94, 131, 236, 190, 16, 239, 67, 190, 0, 0, 0, 191, 190, 20, 251, 190, 224, 197, 199, 189, 2, 0, 0, 191, 189, 20, 251, 190, 224, 197, 199, 189, 1, 0, 0, 63, 94, 131, 236, 190, 16, 239, 67, 190, 1, 0, 0, 63, 94, 131, 236, 62, 16, 239, 67, 62, 0, 0, 0, 191, 190, 20, 251, 62, 224, 197, 199, 61, 2, 0, 0, 191, 189, 20, 251, 62, 224, 197, 199, 61, 1, 0, 0, 63, 94, 131, 236, 62, 16, 239, 67, 62, 1, 0, 0, 63, 16, 239, 67, 190, 94, 131, 236, 62, 0, 0, 0, 191, 224, 197, 199, 189, 185, 20, 251, 62, 0, 0, 0, 191, 224, 197, 199, 189, 189, 20, 251, 62, 1, 0, 0, 63, 16, 239, 67, 190, 94, 131, 236, 62, 1, 0, 0, 63, 16, 239, 67, 62, 94, 131, 236, 190, 0, 0, 0, 191, 224, 197, 199, 61, 185, 20, 251, 190, 0, 0, 0, 191, 224, 197, 199, 61, 189, 20, 251, 190, 1, 0, 0, 63, 16, 239, 67, 62, 94, 131, 236, 190, 1, 0, 0, 63, 248, 4, 181, 190, 248, 4, 181, 190, 1, 0, 0, 191, 52, 219, 212, 190, 224, 57, 142, 190, 2, 0, 0, 191, 52, 219, 212, 190, 216, 57, 142, 190, 2, 0, 0, 63, 244, 4, 181, 190, 244, 4, 181, 190, 2, 0, 0, 63, 248, 4, 181, 62, 248, 4, 181, 62, 1, 0, 0, 191, 52, 219, 212, 62, 224, 57, 142, 62, 2, 0, 0, 191, 52, 219, 212, 62, 216, 57, 142, 62, 2, 0, 0, 63, 244, 4, 181, 62, 244, 4, 181, 62, 2, 0, 0, 63, 0, 239, 67, 190, 102, 131, 236, 190, 3, 0, 0, 191, 0, 239, 67, 190, 100, 131, 236, 190, 2, 0, 0, 63, 224, 57, 142, 190, 52, 219, 212, 190, 2, 0, 0, 191, 216, 57, 142, 190, 52, 219, 212, 190, 2, 0, 0, 63, 0, 239, 67, 62, 96, 131, 236, 62, 2, 0, 0, 63, 0, 239, 67, 62, 98, 131, 236, 62, 3, 0, 0, 191, 224, 57, 142, 62, 52, 219, 212, 62, 2, 0, 0, 191, 216, 57, 142, 62, 52, 219, 212, 62, 2, 0, 0, 63, 96, 131, 236, 190, 0, 239, 67, 62, 2, 0, 0, 63, 96, 131, 236, 190, 0, 239, 67, 62, 1, 0, 0, 191, 52, 219, 212, 190, 224, 57, 142, 62, 2, 0, 0, 191, 52, 219, 212, 190, 216, 57, 142, 62, 2, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 127, 191, 1, 0, 0, 191, 0, 0, 31, 0, 111, 120, 115, 63, 122, 55, 158, 190, 0, 0, 0, 0, 248, 53, 255, 190, 31, 0, 4, 10, 122, 55, 158, 190, 111, 120, 115, 191, 0, 0, 0, 0, 249, 53, 255, 190, 35, 0, 4, 6, 122, 55, 158, 62, 111, 120, 115, 63, 0, 0, 0, 0, 248, 53, 255, 190, 39, 0, 4, 50, 111, 120, 115, 191, 122, 55, 158, 62, 0, 0, 0, 0, 248, 53, 255, 190, 43, 0, 4, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 63, 2, 0, 0, 191, 47, 0, 31, 50, 156, 197, 97, 191, 222, 90, 241, 190, 0, 0, 0, 0, 109, 196, 254, 190, 78, 0, 4, 47, 156, 197, 97, 63, 222, 90, 241, 62, 0, 0, 0, 0, 109, 196, 254, 190, 82, 0, 4, 43, 222, 90, 241, 190, 156, 197, 97, 63, 0, 0, 0, 0, 109, 196, 254, 190, 86, 0, 4, 23, 222, 90, 241, 62, 156, 197, 97, 191, 0, 0, 0, 0, 109, 196, 254, 190, 90, 0, 4, 19, 113, 189, 200, 61, 107, 196, 126, 191, 0, 0, 0, 0, 106, 196, 254, 190, 94, 0, 4, 36, 113, 189, 200, 189, 107, 196, 126, 63, 0, 0, 0, 0, 106, 196, 254, 190, 98, 0, 4, 40, 107, 196, 126, 191, 113, 189, 200, 189, 0, 0, 0, 0, 106, 196, 254, 190, 102, 0, 4, 31, 107, 196, 126, 63, 113, 189, 200, 61, 0, 0, 0, 0, 106, 196, 254, 190, 106, 0, 4, 27, 154, 103, 34, 191, 2, 228, 69, 191, 0, 0, 0, 0, 108, 196, 254, 190, 110, 0, 4, 46, 154, 103, 34, 63, 2, 228, 69, 63, 0, 0, 0, 0, 108, 196, 254, 190, 114, 0, 4, 42, 2, 228, 69, 191, 154, 103, 34, 63, 0, 0, 0, 0, 108, 196, 254, 190, 118, 0, 4, 22, 2, 228, 69, 63, 154, 103, 34, 191, 0, 0, 0, 0, 108, 196, 254, 190, 122, 0, 4, 18, 113, 189, 200, 189, 107, 196, 126, 191, 0, 0, 0, 0, 106, 196, 254, 190, 126, 0, 4, 8, 113, 189, 200, 61, 107, 196, 126, 63, 0, 0, 0, 0, 106, 196, 254, 190, 130, 0, 4, 4, 107, 196, 126, 191, 113, 189, 200, 61, 0, 0, 0, 0, 106, 196, 254, 190, 134, 0, 4, 16, 107, 196, 126, 63, 113, 189, 200, 189, 0, 0, 0, 0, 106, 196, 254, 190, 138, 0, 4, 12, 154, 103, 34, 191, 2, 228, 69, 63, 0, 0, 0, 0, 108, 196, 254, 190, 142, 0, 4, 22, 154, 103, 34, 63, 2, 228, 69, 191, 0, 0, 0, 0, 108, 196, 254, 190, 146, 0, 4, 18, 9, 250, 116, 191, 51, 160, 148, 190, 0, 0, 0, 0, 106, 196, 254, 190, 150, 0, 4, 31, 9, 250, 116, 63, 51, 160, 148, 62, 0, 0, 0, 0, 106, 196, 254, 190, 154, 0, 4, 27, 51, 160, 148, 190, 9, 250, 116, 63, 0, 0, 0, 0, 106, 196, 254, 190, 158, 0, 4, 40, 51, 160, 148, 62, 9, 250, 116, 191, 0, 0, 0, 0, 106, 196, 254, 190, 162, 0, 4, 36, 2, 228, 69, 191, 154, 103, 34, 191, 0, 0, 0, 0, 108, 196, 254, 190, 166, 0, 4, 46, 2, 228, 69, 63, 154, 103, 34, 63, 0, 0, 0, 0, 108, 196, 254, 190, 170, 0, 4, 42, 222, 90, 241, 190, 156, 197, 97, 191, 0, 0, 0, 0, 109, 196, 254, 190, 174, 0, 4, 56, 222, 90, 241, 62, 156, 197, 97, 63, 0, 0, 0, 0, 109, 196, 254, 190, 178, 0, 4, 52, 156, 197, 97, 191, 222, 90, 241, 62, 0, 0, 0, 0, 109, 196, 254, 190, 182, 0, 4, 0, 11, 59, 60, 18, 19, 34, 35, 8, 7, 55, 56, 46, 47, 30, 31, 16, 15, 1, 22, 23, 38, 39, 4, 2, 50, 52, 42, 43, 26, 27, 12, 14, 0, 1, 15, 50, 2, 3, 51, 6, 54, 55, 7, 10, 58, 59, 11, 51, 3, 5, 40, 41, 24, 25, 0, 14, 17, 32, 33, 48, 49, 57, 54, 6, 9, 36, 37, 20, 21, 61, 58, 10, 13, 28, 29, 44, 45, 53, 26, 43, 44, 29, 30, 47, 48, 33, 20, 37, 34, 19, 24, 41, 38, 23, 4, 39, 40, 5, 8, 35, 36, 9, 12, 27, 28, 13, 16, 31, 32, 17, 53, 45, 42, 52, 57, 49, 46, 56, 61, 21, 18, 60, 1, 0, 25, 22, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 50, 51, 53, 52, 55, 54, 57, 56, 59, 58, 61, 60, 1, 17, 1, 5, 5, 17, 0, 1, 0, 17, 2, 18, 0, 18, 0, 2, 5, 18, 2, 5, 10, 18, 0, 10, 5, 10, 3, 19, 5, 19, 3, 5, 0, 19, 0, 3, 11, 19, 0, 11, 5, 11, 4, 20, 5, 20, 4, 5, 0, 20, 0, 4, 12, 20, 0, 12, 5, 12, 1, 21, 5, 21, 0, 21, 13, 21, 0, 13, 5, 13, 0, 22, 16, 22, 0, 16, 8, 22, 0, 8, 5, 22, 5, 8, 5, 16, 0, 23, 17, 23, 9, 23, 0, 9, 5, 23, 5, 9, 0, 24, 6, 24, 0, 6, 12, 24, 5, 24, 5, 6, 0, 25, 7, 25, 0, 7, 13, 25, 5, 25, 5, 7, 0, 26, 8, 26, 11, 26, 5, 26, 0, 27, 9, 27, 10, 27, 5, 27, 0, 28, 14, 28, 0, 14, 6, 28, 5, 28, 5, 14, 0, 29, 15, 29, 0, 15, 7, 29, 5, 29, 5, 15, 2, 30, 0, 30, 5, 30, 14, 30, 3, 31, 5, 31, 0, 31, 15, 31, 4, 32, 5, 32, 0, 32, 16, 32, 1, 5, 17, 0, 1, 17, 0, 2, 18, 2, 5, 18, 0, 10, 18, 5, 10, 18, 3, 5, 19, 0, 3, 19, 0, 11, 19, 5, 11, 19, 4, 5, 20, 0, 4, 20, 0, 12, 20, 5, 12, 20, 1, 5, 21, 0, 1, 21, 0, 13, 21, 5, 13, 21, 0, 16, 22, 0, 8, 22, 5, 8, 22, 5, 16, 22, 0, 17, 23, 0, 9, 23, 5, 9, 23, 5, 17, 23, 0, 6, 24, 0, 12, 24, 5, 12, 24, 5, 6, 24, 0, 7, 25, 0, 13, 25, 5, 13, 25, 5, 7, 25, 0, 8, 26, 0, 11, 26, 5, 11, 26, 5, 8, 26, 0, 9, 27, 0, 10, 27, 5, 10, 27, 5, 9, 27, 0, 14, 28, 0, 6, 28, 5, 6, 28, 5, 14, 28, 0, 15, 29, 0, 7, 29, 5, 7, 29, 5, 15, 29, 0, 2, 30, 2, 5, 30, 0, 14, 30, 5, 14, 30, 3, 5, 31, 0, 3, 31, 0, 15, 31, 5, 15, 31, 4, 5, 32, 0, 4, 32, 0, 16, 32, 5, 16, 32, 0, 0, 1, 0, 14, 0, 0, 0, 25, 0, 0, 0, 15, 0, 1, 0, 1, 0, 22, 0, 2, 0, 3, 0, 4, 0, 2, 0, 2, 0, 50, 0, 3, 0, 5, 0, 3, 0, 51, 0, 5, 0, 4, 0, 39, 0, 4, 0, 5, 0, 40, 0, 7, 0, 6, 0, 6, 0, 9, 0, 6, 0, 54, 0, 8, 0, 7, 0, 7, 0, 55, 0, 9, 0, 8, 0, 35, 0, 8, 0, 9, 0, 36, 0, 11, 0, 10, 0, 10, 0, 13, 0, 10, 0, 58, 0, 12, 0, 11, 0, 11, 0, 59, 0, 13, 0, 12, 0, 27, 0, 12, 0, 13, 0, 28, 0, 15, 0, 14, 0, 14, 0, 17, 0, 16, 0, 15, 0, 17, 0, 16, 0, 31, 0, 16, 0, 17, 0, 32, 0, 18, 0, 19, 0, 21, 0, 18, 0, 60, 0, 18, 0, 19, 0, 20, 0, 19, 0, 34, 0, 20, 0, 21, 0, 37, 0, 20, 0, 21, 0, 61, 0, 22, 0, 23, 0, 25, 0, 22, 0, 23, 0, 24, 0, 23, 0, 38, 0, 24, 0, 25, 0, 41, 0, 24, 0, 26, 0, 27, 0, 29, 0, 26, 0, 43, 0, 26, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 44, 0, 30, 0, 31, 0, 33, 0, 30, 0, 47, 0, 30, 0, 31, 0, 32, 0, 32, 0, 33, 0, 33, 0, 48, 0, 34, 0, 35, 0, 37, 0, 34, 0, 35, 0, 36, 0, 36, 0, 37, 0, 38, 0, 39, 0, 41, 0, 38, 0, 39, 0, 40, 0, 40, 0, 41, 0, 42, 0, 43, 0, 45, 0, 42, 0, 52, 0, 42, 0, 43, 0, 44, 0, 44, 0, 45, 0, 45, 0, 53, 0, 46, 0, 47, 0, 49, 0, 46, 0, 56, 0, 46, 0, 47, 0, 48, 0, 48, 0, 49, 0, 49, 0, 57, 0, 51, 0, 50, 0, 50, 0, 52, 0, 53, 0, 51, 0, 52, 0, 53, 0, 54, 0, 55, 0, 57, 0, 54, 0, 55, 0, 56, 0, 56, 0, 57, 0, 58, 0, 59, 0, 61, 0, 58, 0, 59, 0, 60, 0, 60, 0, 61, 0, 0, 0, 0, 0, 255, 255, 255, 190, 255, 255, 255, 190, 2, 0, 0, 191, 255, 255, 255, 62, 255, 255, 255, 62, 2, 0, 0, 63, 230, 249, 71, 63, 38, 180, 232, 61, 100, 184, 69, 56, 181, 41, 224, 47, 100, 184, 69, 56, 237, 212, 232, 61, 110, 47, 80, 48, 181, 41, 224, 47, 110, 47, 80, 48, 133, 230, 198, 61, 224, 213, 133, 57, 192, 173, 15, 185, 21, 228, 139, 50, 0, 0, 128, 63, 73, 67, 69, 1, 83, 85, 80, 77, 0, 0, 0, 0, 73, 67, 69, 1, 71, 65, 85, 83, 0, 0, 0, 0, 16, 0, 0, 0, 0, 6, 0, 0, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 18, 18, 19, 19, 34, 34, 35, 8, 8, 7, 55, 55, 56, 56, 46, 46, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 21, 21, 20, 20, 37, 37, 36, 9, 9, 6, 54, 54, 57, 57, 49, 49, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 42, 42, 52, 52, 50, 50, 2, 4, 4, 39, 38, 38, 23, 23, 22, 22, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 53, 53, 51, 51, 3, 5, 5, 40, 41, 41, 24, 24, 25, 25, 45, 45, 44, 44, 29, 29, 28, 13, 13, 10, 58, 58, 61, 61, 21, 21, 45, 45, 45, 44, 44, 29, 28, 13, 13, 10, 58, 61, 61, 21, 21, 21, 53, 45, 45, 44, 44, 29, 28, 13, 13, 10, 58, 61, 61, 21, 21, 20, 53, 53, 53, 45, 44, 44, 29, 28, 10, 58, 61, 61, 21, 20, 20, 20, 51, 53, 53, 53, 45, 44, 29, 28, 10, 58, 61, 21, 20, 20, 20, 37, 51, 51, 51, 53, 53, 45, 44, 28, 10, 61, 21, 20, 20, 37, 37, 37, 3, 3, 3, 51, 51, 53, 45, 29, 58, 21, 20, 37, 37, 36, 36, 36, 5, 5, 5, 3, 3, 3, 51, 45, 21, 37, 36, 36, 36, 9, 9, 9, 5, 5, 5, 40, 40, 40, 41, 25, 49, 54, 6, 6, 6, 9, 9, 9, 40, 40, 40, 41, 41, 24, 25, 0, 33, 49, 57, 54, 54, 6, 6, 6, 41, 41, 41, 24, 24, 25, 0, 14, 32, 48, 49, 57, 57, 54, 54, 54, 41, 24, 24, 24, 25, 0, 0, 14, 32, 33, 48, 49, 57, 57, 57, 54, 24, 24, 24, 25, 0, 0, 0, 14, 32, 33, 48, 48, 49, 57, 57, 57, 24, 25, 25, 0, 0, 0, 14, 17, 17, 32, 33, 48, 48, 49, 49, 57, 25, 25, 25, 0, 0, 0, 14, 17, 17, 32, 33, 48, 48, 49, 49, 49, 25, 25, 0, 0, 0, 0, 14, 17, 17, 32, 33, 33, 48, 48, 49, 49, 42, 42, 43, 43, 26, 26, 27, 12, 12, 11, 59, 59, 60, 60, 18, 18, 42, 42, 42, 43, 43, 26, 27, 12, 12, 11, 59, 60, 60, 18, 18, 18, 52, 42, 42, 43, 43, 26, 27, 12, 12, 11, 59, 60, 60, 18, 18, 19, 52, 52, 52, 42, 43, 43, 26, 27, 11, 59, 60, 60, 18, 19, 19, 19, 50, 52, 52, 52, 42, 43, 26, 27, 11, 59, 60, 18, 19, 19, 19, 34, 50, 50, 50, 52, 52, 42, 43, 27, 11, 60, 18, 19, 19, 34, 34, 34, 2, 2, 2, 50, 50, 52, 42, 26, 59, 18, 19, 34, 34, 35, 35, 35, 4, 4, 4, 2, 2, 2, 50, 42, 18, 34, 35, 35, 35, 8, 8, 8, 4, 4, 4, 39, 39, 39, 38, 22, 46, 55, 7, 7, 7, 8, 8, 8, 39, 39, 39, 38, 38, 23, 22, 1, 30, 46, 56, 55, 55, 7, 7, 7, 38, 38, 38, 23, 23, 22, 1, 15, 31, 47, 46, 56, 56, 55, 55, 55, 38, 23, 23, 23, 22, 1, 1, 15, 31, 30, 47, 46, 56, 56, 56, 55, 23, 23, 23, 22, 1, 1, 1, 15, 31, 30, 47, 47, 46, 56, 56, 56, 23, 22, 22, 1, 1, 1, 15, 16, 16, 31, 30, 47, 47, 46, 46, 56, 22, 22, 22, 1, 1, 1, 15, 16, 16, 31, 30, 47, 47, 46, 46, 46, 22, 22, 1, 1, 1, 1, 15, 16, 16, 31, 30, 30, 47, 47, 46, 46, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 29, 29, 29, 29, 29, 29, 29, 29, 26, 26, 26, 26, 26, 26, 26, 26, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 45, 45, 45, 45, 45, 45, 45, 45, 42, 42, 42, 42, 42, 42, 42, 42, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 49, 49, 49, 49, 49, 49, 49, 49, 46, 46, 46, 46, 46, 46, 46, 46, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 33, 33, 33, 33, 33, 33, 33, 33, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 25, 25, 25, 25, 25, 25, 22, 22, 22, 22, 22, 22, 22, 22, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 25, 25, 24, 24, 41, 41, 40, 5, 5, 3, 51, 51, 53, 53, 45, 45, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 22, 22, 23, 23, 38, 38, 39, 4, 4, 2, 50, 50, 52, 52, 42, 42, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 49, 49, 57, 57, 54, 54, 6, 9, 9, 36, 37, 37, 20, 20, 21, 21, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 56, 56, 55, 55, 7, 8, 8, 35, 34, 34, 19, 19, 18, 18, 46, 46, 47, 47, 30, 30, 31, 16, 16, 15, 1, 1, 1, 1, 22, 22, 46, 46, 46, 47, 47, 30, 31, 16, 16, 15, 1, 1, 1, 22, 22, 22, 56, 46, 46, 47, 47, 30, 31, 16, 16, 15, 1, 1, 1, 22, 22, 23, 56, 56, 56, 46, 47, 47, 30, 31, 15, 1, 1, 1, 22, 23, 23, 23, 55, 56, 56, 56, 46, 47, 30, 31, 15, 1, 1, 22, 23, 23, 23, 38, 55, 55, 55, 56, 56, 46, 47, 31, 15, 1, 22, 23, 23, 38, 38, 38, 7, 7, 7, 55, 55, 56, 46, 30, 1, 22, 23, 38, 38, 39, 39, 39, 8, 8, 8, 7, 7, 7, 55, 46, 22, 38, 39, 39, 39, 4, 4, 4, 8, 8, 8, 35, 35, 35, 34, 18, 42, 50, 2, 2, 2, 4, 4, 4, 35, 35, 35, 34, 34, 19, 18, 59, 26, 42, 52, 50, 50, 2, 2, 2, 34, 34, 34, 19, 19, 18, 60, 11, 27, 43, 42, 52, 52, 50, 50, 50, 34, 19, 19, 19, 18, 60, 59, 11, 27, 26, 43, 42, 52, 52, 52, 50, 19, 19, 19, 18, 60, 60, 59, 11, 27, 26, 43, 43, 42, 52, 52, 52, 19, 18, 18, 60, 60, 59, 11, 12, 12, 27, 26, 43, 43, 42, 42, 52, 18, 18, 18, 60, 60, 59, 11, 12, 12, 27, 26, 43, 43, 42, 42, 42, 18, 18, 60, 60, 59, 59, 11, 12, 12, 27, 26, 26, 43, 43, 42, 42, 49, 49, 48, 48, 33, 33, 32, 17, 17, 14, 0, 0, 0, 0, 25, 25, 49, 49, 49, 48, 48, 33, 32, 17, 17, 14, 0, 0, 0, 25, 25, 25, 57, 49, 49, 48, 48, 33, 32, 17, 17, 14, 0, 0, 0, 25, 25, 24, 57, 57, 57, 49, 48, 48, 33, 32, 14, 0, 0, 0, 25, 24, 24, 24, 54, 57, 57, 57, 49, 48, 33, 32, 14, 0, 0, 25, 24, 24, 24, 41, 54, 54, 54, 57, 57, 49, 48, 32, 14, 0, 25, 24, 24, 41, 41, 41, 6, 6, 6, 54, 54, 57, 49, 33, 0, 25, 24, 41, 41, 40, 40, 40, 9, 9, 9, 6, 6, 6, 54, 49, 25, 41, 40, 40, 40, 5, 5, 5, 9, 9, 9, 36, 36, 36, 37, 21, 45, 51, 3, 3, 3, 5, 5, 5, 36, 36, 36, 37, 37, 20, 21, 58, 29, 45, 53, 51, 51, 3, 3, 3, 37, 37, 37, 20, 20, 21, 61, 10, 28, 44, 45, 53, 53, 51, 51, 51, 37, 20, 20, 20, 21, 61, 58, 10, 28, 29, 44, 45, 53, 53, 53, 51, 20, 20, 20, 21, 61, 61, 58, 10, 28, 29, 44, 44, 45, 53, 53, 53, 20, 21, 21, 61, 61, 58, 10, 13, 13, 28, 29, 44, 44, 45, 45, 53, 21, 21, 21, 61, 61, 58, 10, 13, 13, 28, 29, 44, 44, 45, 45, 45, 21, 21, 61, 61, 58, 58, 10, 13, 13, 28, 29, 29, 44, 44, 45, 45, 73, 67, 69, 1, 86, 65, 76, 69, 2, 0, 0, 0, 62, 0, 0, 0, 186, 0, 0, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 25, 14, 22, 0, 15, 50, 3, 4, 51, 5, 2, 2, 5, 39, 40, 4, 3, 54, 9, 7, 55, 6, 8, 7, 9, 35, 36, 8, 6, 58, 13, 11, 59, 10, 12, 11, 13, 27, 28, 12, 10, 0, 17, 15, 1, 14, 16, 15, 17, 31, 32, 16, 14, 19, 21, 60, 34, 20, 18, 21, 19, 37, 61, 18, 20, 23, 25, 1, 38, 24, 22, 25, 23, 41, 0, 22, 24, 27, 29, 43, 12, 28, 26, 29, 27, 13, 44, 26, 28, 31, 33, 47, 16, 32, 30, 33, 31, 17, 48, 30, 32, 35, 37, 19, 8, 36, 34, 37, 35, 9, 20, 34, 36, 39, 41, 23, 4, 40, 38, 41, 39, 5, 24, 38, 40, 43, 45, 52, 26, 44, 42, 45, 43, 29, 53, 42, 44, 47, 49, 56, 30, 48, 46, 49, 47, 33, 57, 46, 48, 52, 51, 2, 50, 53, 3, 42, 53, 50, 51, 52, 45, 55, 57, 6, 56, 54, 7, 46, 57, 55, 54, 56, 49, 59, 61, 10, 60, 58, 11, 18, 61, 59, 58, 60, 21, 0, 0, 128, 191, 42, 159, 254, 62, 122, 234, 180, 62, 122, 234, 180, 62, 2, 0, 0, 63]
        point3f[] points = [(0.5, 0, -0.5), (0.4903926, 0.09754517, -0.5), (0.46193972, 0.1913417, -0.5), (0.4157348, 0.27778512, -0.5), (0.35355338, 0.35355338, -0.5), (0.27778512, 0.4157348, -0.5), (0.1913417, 0.46193972, -0.5), (0.09754517, 0.4903926, -0.5), (3.061617e-17, 0.5, -0.5), (-0.09754517, 0.4903926, -0.5), (-0.1913417, 0.46193972, -0.5), (-0.27778512, 0.4157348, -0.5), (-0.35355338, 0.35355338, -0.5), (-0.4157348, 0.27778512, -0.5), (-0.46193972, 0.1913417, -0.5), (-0.4903926, 0.09754517, -0.5), (-0.5, 6.123234e-17, -0.5), (-0.4903926, -0.09754517, -0.5), (-0.46193972, -0.1913417, -0.5), (-0.4157348, -0.27778512, -0.5), (-0.35355338, -0.35355338, -0.5), (-0.27778512, -0.4157348, -0.5), (-0.1913417, -0.46193972, -0.5), (-0.09754517, -0.4903926, -0.5), (-9.184851e-17, -0.5, -0.5), (0.09754517, -0.4903926, -0.5), (0.1913417, -0.46193972, -0.5), (0.27778512, -0.4157348, -0.5), (0.35355338, -0.35355338, -0.5), (0.4157348, -0.27778512, -0.5), (0.46193972, -0.1913417, -0.5), (0.4903926, -0.09754517, -0.5), (0.5, 0, 0.5), (0.4903926, 0.09754517, 0.5), (0.46193972, 0.1913417, 0.5), (0.4157348, 0.27778512, 0.5), (0.35355338, 0.35355338, 0.5), (0.27778512, 0.4157348, 0.5), (0.1913417, 0.46193972, 0.5), (0.09754517, 0.4903926, 0.5), (3.061617e-17, 0.5, 0.5), (-0.09754517, 0.4903926, 0.5), (-0.1913417, 0.46193972, 0.5), (-0.27778512, 0.4157348, 0.5), (-0.35355338, 0.35355338, 0.5), (-0.4157348, 0.27778512, 0.5), (-0.46193972, 0.1913417, 0.5), (-0.4903926, 0.09754517, 0.5), (-0.5, 6.123234e-17, 0.5), (-0.4903926, -0.09754517, 0.5), (-0.46193972, -0.1913417, 0.5), (-0.4157348, -0.27778512, 0.5), (-0.35355338, -0.35355338, 0.5), (-0.27778512, -0.4157348, 0.5), (-0.1913417, -0.46193972, 0.5), (-0.09754517, -0.4903926, 0.5), (-9.184851e-17, -0.5, 0.5), (0.09754517, -0.4903926, 0.5), (0.1913417, -0.46193972, 0.5), (0.27778512, -0.4157348, 0.5), (0.35355338, -0.35355338, 0.5), (0.4157348, -0.27778512, 0.5), (0.46193972, -0.1913417, 0.5), (0.4903926, -0.09754517, 0.5), (0, 0, -0.5), (0, 0, 0.5)]
        float2[] primvars:st = [(1, 0), (0.96875, 0), (0.96875, 1), (1, 1), (0.96875, 0), (0.9375, 0), (0.9375, 1), (0.96875, 1), (0.9375, 0), (0.90625, 0), (0.90625, 1), (0.9375, 1), (0.90625, 0), (0.875, 0), (0.875, 1), (0.90625, 1), (0.875, 0), (0.84375, 0), (0.84375, 1), (0.875, 1), (0.84375, 0), (0.8125, 0), (0.8125, 1), (0.84375, 1), (0.8125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 1), (0.78125, 0), (0.75, 0), (0.75, 1), (0.78125, 1), (0.75, 0), (0.71875, 0), (0.71875, 1), (0.75, 1), (0.71875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 1), (0.6875, 0), (0.65625, 0), (0.65625, 1), (0.6875, 1), (0.65625, 0), (0.625, 0), (0.625, 1), (0.65625, 1), (0.625, 0), (0.59375, 0), (0.59375, 1), (0.625, 1), (0.59375, 0), (0.5625, 0), (0.5625, 1), (0.59375, 1), (0.5625, 0), (0.53125, 0), (0.53125, 1), (0.5625, 1), (0.53125, 0), (0.5, 0), (0.5, 1), (0.53125, 1), (0.5, 0), (0.46875, 0), (0.46875, 1), (0.5, 1), (0.46875, 0), (0.4375, 0), (0.4375, 1), (0.46875, 1), (0.4375, 0), (0.40625, 0), (0.40625, 1), (0.4375, 1), (0.40625, 0), (0.375, 0), (0.375, 1), (0.40625, 1), (0.375, 0), (0.34375, 0), (0.34375, 1), (0.375, 1), (0.34375, 0), (0.3125, 0), (0.3125, 1), (0.34375, 1), (0.3125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 1), (0.28125, 0), (0.25, 0), (0.25, 1), (0.28125, 1), (0.25, 0), (0.21875, 0), (0.21875, 1), (0.25, 1), (0.21875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 1), (0.1875, 0), (0.15625, 0), (0.15625, 1), (0.1875, 1), (0.15625, 0), (0.125, 0), (0.125, 1), (0.15625, 1), (0.125, 0), (0.09375, 0), (0.09375, 1), (0.125, 1), (0.09375, 0), (0.0625, 0), (0.0625, 1), (0.09375, 1), (0.0625, 0), (0.03125, 0), (0.03125, 1), (0.0625, 1), (0.03125, 0), (0, 0), (0, 1), (0.03125, 1), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (1, 1, 0.25)
        double3 xformOp:translate = (-0.75, -0.75, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "wheel_joint_lb" (
            delete apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 10000
            float drive:angular:physics:targetVelocity = -200
            uniform token physics:axis = "X"
            rel physics:body0 = </World/chassis>
            rel physics:body1 = </World/wheel_lb>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.75, -0.375, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (0.70710677, 0, -0.70710677, 0)
        }
    }

    def Mesh "wheel_rf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI", "PhysicsMeshCollisionAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 33, 32, 1, 2, 34, 33, 2, 3, 35, 34, 3, 4, 36, 35, 4, 5, 37, 36, 5, 6, 38, 37, 6, 7, 39, 38, 7, 8, 40, 39, 8, 9, 41, 40, 9, 10, 42, 41, 10, 11, 43, 42, 11, 12, 44, 43, 12, 13, 45, 44, 13, 14, 46, 45, 14, 15, 47, 46, 15, 16, 48, 47, 16, 17, 49, 48, 17, 18, 50, 49, 18, 19, 51, 50, 19, 20, 52, 51, 20, 21, 53, 52, 21, 22, 54, 53, 22, 23, 55, 54, 23, 24, 56, 55, 24, 25, 57, 56, 25, 26, 58, 57, 26, 27, 59, 58, 27, 28, 60, 59, 28, 29, 61, 60, 29, 30, 62, 61, 30, 31, 63, 62, 31, 0, 32, 63, 0, 64, 1, 1, 64, 2, 2, 64, 3, 3, 64, 4, 4, 64, 5, 5, 64, 6, 6, 64, 7, 7, 64, 8, 8, 64, 9, 9, 64, 10, 10, 64, 11, 11, 64, 12, 12, 64, 13, 13, 64, 14, 14, 64, 15, 15, 64, 16, 16, 64, 17, 17, 64, 18, 18, 64, 19, 19, 64, 20, 20, 64, 21, 21, 64, 22, 22, 64, 23, 23, 64, 24, 24, 64, 25, 25, 64, 26, 26, 64, 27, 27, 64, 28, 28, 64, 29, 29, 64, 30, 30, 64, 31, 31, 64, 0, 32, 33, 65, 33, 34, 65, 34, 35, 65, 35, 36, 65, 36, 37, 65, 37, 38, 65, 38, 39, 65, 39, 40, 65, 40, 41, 65, 41, 42, 65, 42, 43, 65, 43, 44, 65, 44, 45, 65, 45, 46, 65, 46, 47, 65, 47, 48, 65, 48, 49, 65, 49, 50, 65, 50, 51, 65, 51, 52, 65, 52, 53, 65, 53, 54, 65, 54, 55, 65, 55, 56, 65, 56, 57, 65, 57, 58, 65, 58, 59, 65, 59, 60, 65, 60, 61, 65, 61, 62, 65, 62, 63, 65, 63, 32, 65]
        rel material:binding = </World/Looks/wheel> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(50, 0, 0), (49.03926, 9.754517, 0), (49.03926, 9.754517, 0), (50, 0, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (46.193974, 19.13417, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (41.57348, 27.778513, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (35.35534, 35.35534, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (27.778513, 41.57348, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (19.13417, 46.193974, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (9.754517, 49.03926, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (3.061617e-15, 50, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-19.13417, 46.193974, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-27.778513, 41.57348, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-35.35534, 35.35534, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-41.57348, 27.778513, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-46.193974, 19.13417, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-49.03926, 9.754517, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-50, 6.123234e-15, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-49.03926, -9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-46.193974, -19.13417, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-41.57348, -27.778513, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-35.35534, -35.35534, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-27.778513, -41.57348, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-19.13417, -46.193974, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.754517, -49.03926, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (-9.184851e-15, -50, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (19.13417, -46.193974, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (27.778513, -41.57348, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (35.35534, -35.35534, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (41.57348, -27.778513, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (46.193974, -19.13417, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (49.03926, -9.754517, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (50, 0, 0), (50, 0, 0), (49.03926, -9.754517, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        point3f[] points = [(0.5, 0, -0.5), (0.4903926, 0.09754517, -0.5), (0.46193972, 0.1913417, -0.5), (0.4157348, 0.27778512, -0.5), (0.35355338, 0.35355338, -0.5), (0.27778512, 0.4157348, -0.5), (0.1913417, 0.46193972, -0.5), (0.09754517, 0.4903926, -0.5), (3.061617e-17, 0.5, -0.5), (-0.09754517, 0.4903926, -0.5), (-0.1913417, 0.46193972, -0.5), (-0.27778512, 0.4157348, -0.5), (-0.35355338, 0.35355338, -0.5), (-0.4157348, 0.27778512, -0.5), (-0.46193972, 0.1913417, -0.5), (-0.4903926, 0.09754517, -0.5), (-0.5, 6.123234e-17, -0.5), (-0.4903926, -0.09754517, -0.5), (-0.46193972, -0.1913417, -0.5), (-0.4157348, -0.27778512, -0.5), (-0.35355338, -0.35355338, -0.5), (-0.27778512, -0.4157348, -0.5), (-0.1913417, -0.46193972, -0.5), (-0.09754517, -0.4903926, -0.5), (-9.184851e-17, -0.5, -0.5), (0.09754517, -0.4903926, -0.5), (0.1913417, -0.46193972, -0.5), (0.27778512, -0.4157348, -0.5), (0.35355338, -0.35355338, -0.5), (0.4157348, -0.27778512, -0.5), (0.46193972, -0.1913417, -0.5), (0.4903926, -0.09754517, -0.5), (0.5, 0, 0.5), (0.4903926, 0.09754517, 0.5), (0.46193972, 0.1913417, 0.5), (0.4157348, 0.27778512, 0.5), (0.35355338, 0.35355338, 0.5), (0.27778512, 0.4157348, 0.5), (0.1913417, 0.46193972, 0.5), (0.09754517, 0.4903926, 0.5), (3.061617e-17, 0.5, 0.5), (-0.09754517, 0.4903926, 0.5), (-0.1913417, 0.46193972, 0.5), (-0.27778512, 0.4157348, 0.5), (-0.35355338, 0.35355338, 0.5), (-0.4157348, 0.27778512, 0.5), (-0.46193972, 0.1913417, 0.5), (-0.4903926, 0.09754517, 0.5), (-0.5, 6.123234e-17, 0.5), (-0.4903926, -0.09754517, 0.5), (-0.46193972, -0.1913417, 0.5), (-0.4157348, -0.27778512, 0.5), (-0.35355338, -0.35355338, 0.5), (-0.27778512, -0.4157348, 0.5), (-0.1913417, -0.46193972, 0.5), (-0.09754517, -0.4903926, 0.5), (-9.184851e-17, -0.5, 0.5), (0.09754517, -0.4903926, 0.5), (0.1913417, -0.46193972, 0.5), (0.27778512, -0.4157348, 0.5), (0.35355338, -0.35355338, 0.5), (0.4157348, -0.27778512, 0.5), (0.46193972, -0.1913417, 0.5), (0.4903926, -0.09754517, 0.5), (0, 0, -0.5), (0, 0, 0.5)]
        float2[] primvars:st = [(1, 0), (0.96875, 0), (0.96875, 1), (1, 1), (0.96875, 0), (0.9375, 0), (0.9375, 1), (0.96875, 1), (0.9375, 0), (0.90625, 0), (0.90625, 1), (0.9375, 1), (0.90625, 0), (0.875, 0), (0.875, 1), (0.90625, 1), (0.875, 0), (0.84375, 0), (0.84375, 1), (0.875, 1), (0.84375, 0), (0.8125, 0), (0.8125, 1), (0.84375, 1), (0.8125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 1), (0.78125, 0), (0.75, 0), (0.75, 1), (0.78125, 1), (0.75, 0), (0.71875, 0), (0.71875, 1), (0.75, 1), (0.71875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 1), (0.6875, 0), (0.65625, 0), (0.65625, 1), (0.6875, 1), (0.65625, 0), (0.625, 0), (0.625, 1), (0.65625, 1), (0.625, 0), (0.59375, 0), (0.59375, 1), (0.625, 1), (0.59375, 0), (0.5625, 0), (0.5625, 1), (0.59375, 1), (0.5625, 0), (0.53125, 0), (0.53125, 1), (0.5625, 1), (0.53125, 0), (0.5, 0), (0.5, 1), (0.53125, 1), (0.5, 0), (0.46875, 0), (0.46875, 1), (0.5, 1), (0.46875, 0), (0.4375, 0), (0.4375, 1), (0.46875, 1), (0.4375, 0), (0.40625, 0), (0.40625, 1), (0.4375, 1), (0.40625, 0), (0.375, 0), (0.375, 1), (0.40625, 1), (0.375, 0), (0.34375, 0), (0.34375, 1), (0.375, 1), (0.34375, 0), (0.3125, 0), (0.3125, 1), (0.34375, 1), (0.3125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 1), (0.28125, 0), (0.25, 0), (0.25, 1), (0.28125, 1), (0.25, 0), (0.21875, 0), (0.21875, 1), (0.25, 1), (0.21875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 1), (0.1875, 0), (0.15625, 0), (0.15625, 1), (0.1875, 1), (0.15625, 0), (0.125, 0), (0.125, 1), (0.15625, 1), (0.125, 0), (0.09375, 0), (0.09375, 1), (0.125, 1), (0.09375, 0), (0.0625, 0), (0.0625, 1), (0.09375, 1), (0.0625, 0), (0.03125, 0), (0.03125, 1), (0.0625, 1), (0.03125, 0), (0, 0), (0, 1), (0.03125, 1), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (1, 1, 0.25)
        double3 xformOp:translate = (0.75, 0.75, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "wheel_joint_rf" (
            delete apiSchemas = ["PhysicsDriveAPI:angular"]
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 10000
            float drive:angular:physics:targetVelocity = 0
            uniform token physics:axis = "X"
            rel physics:body0 = </World/chassis>
            rel physics:body1 = </World/wheel_rf>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0.75, 0.375, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (0.70710677, 0, -0.70710677, 0)
        }
    }

    def Mesh "wheel_rb" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI", "PhysicsMeshCollisionAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 33, 32, 1, 2, 34, 33, 2, 3, 35, 34, 3, 4, 36, 35, 4, 5, 37, 36, 5, 6, 38, 37, 6, 7, 39, 38, 7, 8, 40, 39, 8, 9, 41, 40, 9, 10, 42, 41, 10, 11, 43, 42, 11, 12, 44, 43, 12, 13, 45, 44, 13, 14, 46, 45, 14, 15, 47, 46, 15, 16, 48, 47, 16, 17, 49, 48, 17, 18, 50, 49, 18, 19, 51, 50, 19, 20, 52, 51, 20, 21, 53, 52, 21, 22, 54, 53, 22, 23, 55, 54, 23, 24, 56, 55, 24, 25, 57, 56, 25, 26, 58, 57, 26, 27, 59, 58, 27, 28, 60, 59, 28, 29, 61, 60, 29, 30, 62, 61, 30, 31, 63, 62, 31, 0, 32, 63, 0, 64, 1, 1, 64, 2, 2, 64, 3, 3, 64, 4, 4, 64, 5, 5, 64, 6, 6, 64, 7, 7, 64, 8, 8, 64, 9, 9, 64, 10, 10, 64, 11, 11, 64, 12, 12, 64, 13, 13, 64, 14, 14, 64, 15, 15, 64, 16, 16, 64, 17, 17, 64, 18, 18, 64, 19, 19, 64, 20, 20, 64, 21, 21, 64, 22, 22, 64, 23, 23, 64, 24, 24, 64, 25, 25, 64, 26, 26, 64, 27, 27, 64, 28, 28, 64, 29, 29, 64, 30, 30, 64, 31, 31, 64, 0, 32, 33, 65, 33, 34, 65, 34, 35, 65, 35, 36, 65, 36, 37, 65, 37, 38, 65, 38, 39, 65, 39, 40, 65, 40, 41, 65, 41, 42, 65, 42, 43, 65, 43, 44, 65, 44, 45, 65, 45, 46, 65, 46, 47, 65, 47, 48, 65, 48, 49, 65, 49, 50, 65, 50, 51, 65, 51, 52, 65, 52, 53, 65, 53, 54, 65, 54, 55, 65, 55, 56, 65, 56, 57, 65, 57, 58, 65, 58, 59, 65, 59, 60, 65, 60, 61, 65, 61, 62, 65, 62, 63, 65, 63, 32, 65]
        rel material:binding = </World/Looks/wheel> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(50, 0, 0), (49.03926, 9.754517, 0), (49.03926, 9.754517, 0), (50, 0, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (46.193974, 19.13417, 0), (49.03926, 9.754517, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (41.57348, 27.778513, 0), (46.193974, 19.13417, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (35.35534, 35.35534, 0), (41.57348, 27.778513, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (27.778513, 41.57348, 0), (35.35534, 35.35534, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (19.13417, 46.193974, 0), (27.778513, 41.57348, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (9.754517, 49.03926, 0), (19.13417, 46.193974, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (3.061617e-15, 50, 0), (9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-9.754517, 49.03926, 0), (3.061617e-15, 50, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-19.13417, 46.193974, 0), (-9.754517, 49.03926, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-27.778513, 41.57348, 0), (-19.13417, 46.193974, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-35.35534, 35.35534, 0), (-27.778513, 41.57348, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-41.57348, 27.778513, 0), (-35.35534, 35.35534, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-46.193974, 19.13417, 0), (-41.57348, 27.778513, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-49.03926, 9.754517, 0), (-46.193974, 19.13417, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-50, 6.123234e-15, 0), (-49.03926, 9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-49.03926, -9.754517, 0), (-50, 6.123234e-15, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-46.193974, -19.13417, 0), (-49.03926, -9.754517, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-41.57348, -27.778513, 0), (-46.193974, -19.13417, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-35.35534, -35.35534, 0), (-41.57348, -27.778513, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-27.778513, -41.57348, 0), (-35.35534, -35.35534, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-19.13417, -46.193974, 0), (-27.778513, -41.57348, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.754517, -49.03926, 0), (-19.13417, -46.193974, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (-9.184851e-15, -50, 0), (-9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (9.754517, -49.03926, 0), (-9.184851e-15, -50, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (19.13417, -46.193974, 0), (9.754517, -49.03926, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (27.778513, -41.57348, 0), (19.13417, -46.193974, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (35.35534, -35.35534, 0), (27.778513, -41.57348, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (41.57348, -27.778513, 0), (35.35534, -35.35534, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (46.193974, -19.13417, 0), (41.57348, -27.778513, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (49.03926, -9.754517, 0), (46.193974, -19.13417, 0), (49.03926, -9.754517, 0), (50, 0, 0), (50, 0, 0), (49.03926, -9.754517, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        point3f[] points = [(0.5, 0, -0.5), (0.4903926, 0.09754517, -0.5), (0.46193972, 0.1913417, -0.5), (0.4157348, 0.27778512, -0.5), (0.35355338, 0.35355338, -0.5), (0.27778512, 0.4157348, -0.5), (0.1913417, 0.46193972, -0.5), (0.09754517, 0.4903926, -0.5), (3.061617e-17, 0.5, -0.5), (-0.09754517, 0.4903926, -0.5), (-0.1913417, 0.46193972, -0.5), (-0.27778512, 0.4157348, -0.5), (-0.35355338, 0.35355338, -0.5), (-0.4157348, 0.27778512, -0.5), (-0.46193972, 0.1913417, -0.5), (-0.4903926, 0.09754517, -0.5), (-0.5, 6.123234e-17, -0.5), (-0.4903926, -0.09754517, -0.5), (-0.46193972, -0.1913417, -0.5), (-0.4157348, -0.27778512, -0.5), (-0.35355338, -0.35355338, -0.5), (-0.27778512, -0.4157348, -0.5), (-0.1913417, -0.46193972, -0.5), (-0.09754517, -0.4903926, -0.5), (-9.184851e-17, -0.5, -0.5), (0.09754517, -0.4903926, -0.5), (0.1913417, -0.46193972, -0.5), (0.27778512, -0.4157348, -0.5), (0.35355338, -0.35355338, -0.5), (0.4157348, -0.27778512, -0.5), (0.46193972, -0.1913417, -0.5), (0.4903926, -0.09754517, -0.5), (0.5, 0, 0.5), (0.4903926, 0.09754517, 0.5), (0.46193972, 0.1913417, 0.5), (0.4157348, 0.27778512, 0.5), (0.35355338, 0.35355338, 0.5), (0.27778512, 0.4157348, 0.5), (0.1913417, 0.46193972, 0.5), (0.09754517, 0.4903926, 0.5), (3.061617e-17, 0.5, 0.5), (-0.09754517, 0.4903926, 0.5), (-0.1913417, 0.46193972, 0.5), (-0.27778512, 0.4157348, 0.5), (-0.35355338, 0.35355338, 0.5), (-0.4157348, 0.27778512, 0.5), (-0.46193972, 0.1913417, 0.5), (-0.4903926, 0.09754517, 0.5), (-0.5, 6.123234e-17, 0.5), (-0.4903926, -0.09754517, 0.5), (-0.46193972, -0.1913417, 0.5), (-0.4157348, -0.27778512, 0.5), (-0.35355338, -0.35355338, 0.5), (-0.27778512, -0.4157348, 0.5), (-0.1913417, -0.46193972, 0.5), (-0.09754517, -0.4903926, 0.5), (-9.184851e-17, -0.5, 0.5), (0.09754517, -0.4903926, 0.5), (0.1913417, -0.46193972, 0.5), (0.27778512, -0.4157348, 0.5), (0.35355338, -0.35355338, 0.5), (0.4157348, -0.27778512, 0.5), (0.46193972, -0.1913417, 0.5), (0.4903926, -0.09754517, 0.5), (0, 0, -0.5), (0, 0, 0.5)]
        float2[] primvars:st = [(1, 0), (0.96875, 0), (0.96875, 1), (1, 1), (0.96875, 0), (0.9375, 0), (0.9375, 1), (0.96875, 1), (0.9375, 0), (0.90625, 0), (0.90625, 1), (0.9375, 1), (0.90625, 0), (0.875, 0), (0.875, 1), (0.90625, 1), (0.875, 0), (0.84375, 0), (0.84375, 1), (0.875, 1), (0.84375, 0), (0.8125, 0), (0.8125, 1), (0.84375, 1), (0.8125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 1), (0.78125, 0), (0.75, 0), (0.75, 1), (0.78125, 1), (0.75, 0), (0.71875, 0), (0.71875, 1), (0.75, 1), (0.71875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 1), (0.6875, 0), (0.65625, 0), (0.65625, 1), (0.6875, 1), (0.65625, 0), (0.625, 0), (0.625, 1), (0.65625, 1), (0.625, 0), (0.59375, 0), (0.59375, 1), (0.625, 1), (0.59375, 0), (0.5625, 0), (0.5625, 1), (0.59375, 1), (0.5625, 0), (0.53125, 0), (0.53125, 1), (0.5625, 1), (0.53125, 0), (0.5, 0), (0.5, 1), (0.53125, 1), (0.5, 0), (0.46875, 0), (0.46875, 1), (0.5, 1), (0.46875, 0), (0.4375, 0), (0.4375, 1), (0.46875, 1), (0.4375, 0), (0.40625, 0), (0.40625, 1), (0.4375, 1), (0.40625, 0), (0.375, 0), (0.375, 1), (0.40625, 1), (0.375, 0), (0.34375, 0), (0.34375, 1), (0.375, 1), (0.34375, 0), (0.3125, 0), (0.3125, 1), (0.34375, 1), (0.3125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 1), (0.28125, 0), (0.25, 0), (0.25, 1), (0.28125, 1), (0.25, 0), (0.21875, 0), (0.21875, 1), (0.25, 1), (0.21875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 1), (0.1875, 0), (0.15625, 0), (0.15625, 1), (0.1875, 1), (0.15625, 0), (0.125, 0), (0.125, 1), (0.15625, 1), (0.125, 0), (0.09375, 0), (0.09375, 1), (0.125, 1), (0.09375, 0), (0.0625, 0), (0.0625, 1), (0.09375, 1), (0.0625, 0), (0.03125, 0), (0.03125, 1), (0.0625, 1), (0.03125, 0), (0, 0), (0, 1), (0.03125, 1), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0), (0, 0), (0, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (1, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (1, 1, 0.25)
        double3 xformOp:translate = (0.75, -0.75, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "wheel_joint_rb" (
            delete apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 10000
            float drive:angular:physics:targetVelocity = -200
            uniform token physics:axis = "X"
            rel physics:body0 = </World/chassis>
            rel physics:body1 = </World/wheel_rb>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0.75, -0.375, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (0.70710677, 0, -0.70710677, 0)
        }
    }

    def Mesh "chassis" (
        delete apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysxConvexHullCollisionAPI", "PhysicsMeshCollisionAPI", "PhysxCookedDataAPI:convexHull"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 4, 5, 1, 0, 6, 2, 3, 7, 4, 0, 2, 6, 5, 7, 3, 1]
        rel material:binding = </World/Looks/chassis> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "faceVarying"
        )
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        uchar[] physxCookedData:convexHull:buffer = [9, 182, 74, 149, 2, 123, 154, 171, 83, 163, 156, 133, 6, 156, 211, 41, 211, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 8, 0, 0, 0, 12, 128, 0, 0, 6, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 191, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 191, 4, 0, 4, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 8, 0, 4, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 191, 12, 0, 4, 2, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 16, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 191, 20, 0, 4, 0, 0, 1, 2, 3, 4, 5, 3, 2, 4, 2, 1, 6, 7, 6, 1, 0, 7, 0, 3, 5, 7, 5, 4, 6, 0, 3, 0, 2, 0, 1, 0, 4, 1, 5, 1, 4, 1, 2, 2, 3, 2, 5, 3, 5, 3, 4, 4, 5, 0, 3, 4, 0, 2, 3, 0, 1, 2, 0, 1, 4, 1, 2, 5, 1, 4, 5, 2, 3, 5, 3, 4, 5, 0, 0, 1, 0, 1, 0, 2, 0, 2, 0, 3, 0, 3, 0, 0, 0, 4, 0, 5, 0, 5, 0, 3, 0, 2, 0, 4, 0, 1, 0, 6, 0, 6, 0, 4, 0, 7, 0, 6, 0, 0, 0, 7, 0, 5, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 128, 63, 171, 170, 42, 62, 0, 0, 0, 128, 0, 0, 0, 128, 0, 0, 0, 128, 171, 170, 42, 62, 0, 0, 0, 128, 0, 0, 0, 128, 0, 0, 0, 128, 171, 170, 42, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63]
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5)]
        float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (0, 0), (0, 1), (1, 1), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (0, 0), (0, 1), (1, 1)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 2, 0.5)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Camera "car_cam"
        {
            float2 clippingRange = (1, 10000000)
            float focalLength = 24
            float focusDistance = 400
            bool omni:kit:cameraLock = 1
            custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -367.46143080004305)
            quatd xformOp:orient = (0.781534160823773, 0.6238624491548445, 0, 0)
            double3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (3.286260152890463e-14, -1.427870262076096, 3.0606478376341304)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Material "PhysicsMaterial" (
        prepend apiSchemas = ["PhysicsMaterialAPI"]
    )
    {
    }

    def Scope "Looks"
    {
        def Material "chassis"
        {
            token outputs:mdl:displacement.connect = </World/Looks/chassis/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/chassis/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/chassis/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                color3f inputs:diffuse_color_constant = (0.8565401, 0.5417022, 0.18431881) (
                    customData = {
                        float3 default = (0.2, 0.2, 0.2)
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Color"
                    doc = "This is the albedo base color"
                    hidden = false
                )
                token outputs:out (
                    renderType = "material"
                )
            }
        }

        def Material "wheel"
        {
            token outputs:mdl:displacement.connect = </World/Looks/wheel/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/wheel/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/wheel/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                color3f inputs:diffuse_color_constant = (0.000001, 9.999961e-7, 9.9999e-7) (
                    customData = {
                        float3 default = (0.2, 0.2, 0.2)
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Color"
                    doc = "This is the albedo base color"
                    hidden = false
                )
                token outputs:out (
                    renderType = "material"
                )
            }
        }
    }

    def Xform "PaintTool"
    {
        def Xform "Grass_Short_A_26bdf"
        {
            def PointInstancer "pointInstancer"
            {
                quath[] orientations = []
                point3f[] positions = []
                int[] protoIndices = []
                prepend rel prototypes = </World/PaintTool/Grass_Short_A_26bdf/pointInstancer/asset>
                float3[] scales = []

                def Xform "asset" (
                    kind = "component"
                    prepend references = @https://omniverse-content-production.s3.us-west-2.amazonaws.com/Assets/Vegetation/Shrub/Grass_Short_A.usd@
                )
                {
                }
            }
        }

        def Xform "Grass_Short_B_f6e14"
        {
            def PointInstancer "pointInstancer"
            {
                quath[] orientations = []
                point3f[] positions = []
                int[] protoIndices = []
                prepend rel prototypes = </World/PaintTool/Grass_Short_B_f6e14/pointInstancer/asset>
                float3[] scales = []

                def Xform "asset" (
                    kind = "component"
                    prepend references = @https://omniverse-content-production.s3.us-west-2.amazonaws.com/Assets/Vegetation/Shrub/Grass_Short_B.usd@
                )
                {
                }
            }
        }
    }
}

def Xform "Environment"
{
    token visibility = "inherited"
    quatd xformOp:orient = (1, 0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float angle = 1
        float intensity = 3000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus
        color3f shaping:focusTint
        asset shaping:ies:file
        quatd xformOp:orient = (0.6532814824381883, 0.2705980500730985, 0.27059805007309845, 0.6532814824381882)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def PhysicsScene "PhysicsScene" (
        prepend apiSchemas = ["PhysxSceneAPI"]
    )
    {
        vector3f physics:gravityDirection = (0, 0, -1)
        float physics:gravityMagnitude = 9.8
        uniform token physxScene:broadphaseType = "MBP"
        bool physxScene:enableGPUDynamics = 0
    }

    def Xform "GroundPlane"
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Mesh "CollisionMesh"
        {
            uniform bool doubleSided = 0
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 2, 3]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
            point3f[] points = [(-25, -25, 0), (25, -25, 0), (25, 25, 0), (-25, 25, 0)]
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "varying"
            )
        }

        def Plane "CollisionPlane" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            uniform token axis = "Z"
            uniform token purpose = "guide"
        }
    }
}

